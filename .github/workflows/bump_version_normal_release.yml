name: Bump Version for releases

on:
  workflow_dispatch:
    inputs:
      bump_version_type:
        description: 'Select type for bumping version'
        required: true
        default: 'Normal Release'
        type: choice
        options:
          - 'Normal Release'
          - 'Hotfix Release'

jobs:
  bump_version_and_raise_PR:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Fetch tags
        run: |
          git fetch --tags
        
      - name: Get current latest released version 
        run: |
          echo "Branch name: ${{ github.event.inputs.branch }}"
          VERSION=$(/usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" EggTimer/Info.plist)
          echo "Extracted version: $VERSION"
          echo "version=${VERSION}" >> $GITHUB_ENV

      - name: Update the minor part version and create bumped version branch name
        run: |
          IFS='.' read -r major minor patch <<< "${{ env.version }}"
          if [[ "${{ github.event.inputs.bump_version_type }}" == "Hotfix Release" ]]; then
            patch=$((patch + 1))
            bumped_version=${major}.${minor}.${patch}
            echo "base_branch=production" >> $GITHUB_ENV
            echo "patch=true" >> $GITHUB_ENV
          else
            minor=$((minor + 1))
            bumped_version=${major}.${minor}.0
            echo "base_branch=develop" >> $GITHUB_ENV
            echo "patch=false" >> $GITHUB_ENV
          fi
          NEW_BRANCH="adhoc/bump_version_to_${bumped_version}"
          echo "bumped_version=${bumped_version}" >> $GITHUB_ENV
          echo "new_branch=${NEW_BRANCH}" >> $GITHUB_ENV

      - name: Setup developer details
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"    
      
      - name: Create branch for bump version
        run: |
          git checkout -b ${{ env.new_branch }}
          echo "bundle exec fastlane bump_version patch:${{ env.patch }}"
          echo "This is a new file created via GitHub Actions" > newfile.txt
          git add .
          git commit -m "Bumped version to ${{ env.bumped_version }}"
          git push origin ${{ env.new_branch }}

      - name: Create PR for the bumped version branch against ${{ env.base_branch }}
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d @- https://api.github.com/repos/${{ github.repository }}/pulls <<EOF
          {
            "title": "Bumped version to ${{ env.bumped_version }}",
            "head": "${{ env.new_branch }}",
            "base": "${{ env.base_branch }}",
            "body": "Bump version to ${{ env.bumped_version }}"
          }
          EOF
